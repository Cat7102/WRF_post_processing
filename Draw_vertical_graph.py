# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'draw_plan_graph.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtWidgets
from PyQt5.QtWidgets import QButtonGroup
import sys
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
import matplotlib.pyplot as plt
import netCDF4 as nc
import numpy as np
import matplotlib.ticker as mticker
from cartopy.mpl.ticker import LongitudeFormatter, LatitudeFormatter
from wrf import getvar, to_np, ALL_TIMES
from datetime import datetime, timedelta
import matplotlib as mpl
from scipy.interpolate import griddata

mpl.rcParams['font.family'] = 'sans-serif'
mpl.rcParams['font.sans-serif'] = 'NSimSun'
mpl.rcParams['axes.unicode_minus']=False

class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(1274, 899)
        Dialog.setWindowFlag(QtCore.Qt.WindowMinMaxButtonsHint)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(Dialog)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.textEdit = QtWidgets.QTextEdit(Dialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textEdit.sizePolicy().hasHeightForWidth())
        self.textEdit.setSizePolicy(sizePolicy)
        self.textEdit.setMinimumSize(QtCore.QSize(0, 25))
        self.textEdit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.textEdit.setObjectName("textEdit")
        self.horizontalLayout.addWidget(self.textEdit)
        self.pushButton = QtWidgets.QPushButton(Dialog)
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout.addWidget(self.pushButton)
        self.verticalLayout_2.addLayout(self.horizontalLayout)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.label_2 = QtWidgets.QLabel(Dialog)
        self.label_2.setObjectName("label_2")
        self.verticalLayout.addWidget(self.label_2)
        self.graphicsView = QtWidgets.QGraphicsView(Dialog)
        self.graphicsView.setObjectName("graphicsView")
        self.verticalLayout.addWidget(self.graphicsView)
        self.horizontalLayout_2.addLayout(self.verticalLayout)
        self.scrollArea = QtWidgets.QScrollArea(Dialog)
        self.scrollArea.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 528, 1053))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.radioButton_6 = QtWidgets.QRadioButton(self.scrollAreaWidgetContents)
        self.radioButton_6.setChecked(True)
        self.radioButton_6.setObjectName("radioButton_6")
        self.horizontalLayout_4.addWidget(self.radioButton_6)
        self.radioButton_7 = QtWidgets.QRadioButton(self.scrollAreaWidgetContents)
        self.radioButton_7.setObjectName("radioButton_7")
        self.horizontalLayout_4.addWidget(self.radioButton_7)
        self.verticalLayout_4.addLayout(self.horizontalLayout_4)
        self.groupBox = QtWidgets.QGroupBox(self.scrollAreaWidgetContents)
        self.groupBox.setAutoFillBackground(False)
        self.groupBox.setFlat(False)
        self.groupBox.setCheckable(False)
        self.groupBox.setObjectName("groupBox")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.groupBox)
        self.gridLayout_4.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.gridLayout_4.setContentsMargins(-1, 5, -1, 5)
        self.gridLayout_4.setSpacing(2)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.label_8 = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_8.sizePolicy().hasHeightForWidth())
        self.label_8.setSizePolicy(sizePolicy)
        self.label_8.setObjectName("label_8")
        self.gridLayout_4.addWidget(self.label_8, 5, 0, 1, 1)
        self.label_73 = QtWidgets.QLabel(self.groupBox)
        self.label_73.setObjectName("label_73")
        self.gridLayout_4.addWidget(self.label_73, 9, 2, 1, 1)
        self.comboBox_14 = QtWidgets.QComboBox(self.groupBox)
        self.comboBox_14.setObjectName("comboBox_14")
        self.comboBox_14.addItem("")
        self.comboBox_14.addItem("")
        self.comboBox_14.addItem("")
        self.comboBox_14.addItem("")
        self.comboBox_14.addItem("")
        self.comboBox_14.addItem("")
        self.comboBox_14.addItem("")
        self.gridLayout_4.addWidget(self.comboBox_14, 11, 1, 1, 1)
        self.label_19 = QtWidgets.QLabel(self.groupBox)
        self.label_19.setObjectName("label_19")
        self.gridLayout_4.addWidget(self.label_19, 6, 2, 1, 1)
        self.lineEdit_8 = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_8.setMaximumSize(QtCore.QSize(70, 16777215))
        self.lineEdit_8.setObjectName("lineEdit_8")
        self.gridLayout_4.addWidget(self.lineEdit_8, 7, 3, 1, 1)
        self.label_10 = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_10.sizePolicy().hasHeightForWidth())
        self.label_10.setSizePolicy(sizePolicy)
        self.label_10.setObjectName("label_10")
        self.gridLayout_4.addWidget(self.label_10, 7, 0, 1, 1)
        self.lineEdit_3 = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_3.setMaximumSize(QtCore.QSize(70, 16777215))
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.gridLayout_4.addWidget(self.lineEdit_3, 5, 1, 1, 1)
        self.lineEdit_14 = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_14.setMaximumSize(QtCore.QSize(70, 16777215))
        self.lineEdit_14.setObjectName("lineEdit_14")
        self.gridLayout_4.addWidget(self.lineEdit_14, 6, 3, 1, 1)
        self.label_6 = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_6.sizePolicy().hasHeightForWidth())
        self.label_6.setSizePolicy(sizePolicy)
        self.label_6.setObjectName("label_6")
        self.gridLayout_4.addWidget(self.label_6, 4, 0, 1, 1)
        self.lineEdit_6 = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_6.setMaximumSize(QtCore.QSize(70, 16777215))
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.gridLayout_4.addWidget(self.lineEdit_6, 4, 3, 1, 1)
        self.lineEdit_4 = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_4.setMaximumSize(QtCore.QSize(70, 16777215))
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.gridLayout_4.addWidget(self.lineEdit_4, 7, 1, 1, 1)
        self.label_7 = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_7.sizePolicy().hasHeightForWidth())
        self.label_7.setSizePolicy(sizePolicy)
        self.label_7.setObjectName("label_7")
        self.gridLayout_4.addWidget(self.label_7, 4, 2, 1, 1)
        self.label_51 = QtWidgets.QLabel(self.groupBox)
        self.label_51.setObjectName("label_51")
        self.gridLayout_4.addWidget(self.label_51, 12, 2, 1, 1)
        self.lineEdit = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit.setMaximumSize(QtCore.QSize(70, 16777215))
        self.lineEdit.setObjectName("lineEdit")
        self.gridLayout_4.addWidget(self.lineEdit, 3, 1, 1, 1)
        self.label_38 = QtWidgets.QLabel(self.groupBox)
        self.label_38.setObjectName("label_38")
        self.gridLayout_4.addWidget(self.label_38, 9, 0, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_5.sizePolicy().hasHeightForWidth())
        self.label_5.setSizePolicy(sizePolicy)
        self.label_5.setObjectName("label_5")
        self.gridLayout_4.addWidget(self.label_5, 3, 2, 1, 1)
        self.comboBox_15 = QtWidgets.QComboBox(self.groupBox)
        self.comboBox_15.setObjectName("comboBox_15")
        self.comboBox_15.addItem("")
        self.comboBox_15.addItem("")
        self.comboBox_15.addItem("")
        self.comboBox_15.addItem("")
        self.gridLayout_4.addWidget(self.comboBox_15, 11, 3, 1, 1)
        self.label_52 = QtWidgets.QLabel(self.groupBox)
        self.label_52.setObjectName("label_52")
        self.gridLayout_4.addWidget(self.label_52, 11, 0, 1, 1)
        self.lineEdit_39 = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_39.setMaximumSize(QtCore.QSize(70, 16777215))
        self.lineEdit_39.setObjectName("lineEdit_39")
        self.gridLayout_4.addWidget(self.lineEdit_39, 9, 3, 1, 1)
        self.label_4 = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_4.sizePolicy().hasHeightForWidth())
        self.label_4.setSizePolicy(sizePolicy)
        self.label_4.setObjectName("label_4")
        self.gridLayout_4.addWidget(self.label_4, 3, 0, 1, 1)
        self.textEdit_2 = QtWidgets.QTextEdit(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textEdit_2.sizePolicy().hasHeightForWidth())
        self.textEdit_2.setSizePolicy(sizePolicy)
        self.textEdit_2.setMaximumSize(QtCore.QSize(150, 30))
        self.textEdit_2.setObjectName("textEdit_2")
        self.gridLayout_4.addWidget(self.textEdit_2, 9, 1, 1, 1)
        self.lineEdit_2 = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_2.setMaximumSize(QtCore.QSize(70, 16777215))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.gridLayout_4.addWidget(self.lineEdit_2, 4, 1, 1, 1)
        self.lineEdit_7 = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_7.setMaximumSize(QtCore.QSize(70, 16777215))
        self.lineEdit_7.setObjectName("lineEdit_7")
        self.gridLayout_4.addWidget(self.lineEdit_7, 6, 1, 1, 1)
        self.label_53 = QtWidgets.QLabel(self.groupBox)
        self.label_53.setObjectName("label_53")
        self.gridLayout_4.addWidget(self.label_53, 11, 2, 1, 1)
        self.lineEdit_5 = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_5.setMaximumSize(QtCore.QSize(70, 16777215))
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.gridLayout_4.addWidget(self.lineEdit_5, 3, 3, 1, 1)
        self.label_11 = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_11.sizePolicy().hasHeightForWidth())
        self.label_11.setSizePolicy(sizePolicy)
        self.label_11.setObjectName("label_11")
        self.gridLayout_4.addWidget(self.label_11, 7, 2, 1, 1)
        self.lineEdit_28 = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_28.setMaximumSize(QtCore.QSize(70, 16777215))
        self.lineEdit_28.setObjectName("lineEdit_28")
        self.gridLayout_4.addWidget(self.lineEdit_28, 12, 3, 1, 1)
        self.label_9 = QtWidgets.QLabel(self.groupBox)
        self.label_9.setObjectName("label_9")
        self.gridLayout_4.addWidget(self.label_9, 6, 0, 1, 1)
        self.label_20 = QtWidgets.QLabel(self.groupBox)
        self.label_20.setObjectName("label_20")
        self.gridLayout_4.addWidget(self.label_20, 5, 2, 1, 1)
        self.lineEdit_15 = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_15.setMaximumSize(QtCore.QSize(70, 16777215))
        self.lineEdit_15.setObjectName("lineEdit_15")
        self.gridLayout_4.addWidget(self.lineEdit_15, 5, 3, 1, 1)
        self.label_27 = QtWidgets.QLabel(self.groupBox)
        self.label_27.setObjectName("label_27")
        self.gridLayout_4.addWidget(self.label_27, 12, 0, 1, 1)
        self.comboBox_7 = QtWidgets.QComboBox(self.groupBox)
        self.comboBox_7.setMinimumSize(QtCore.QSize(150, 0))
        self.comboBox_7.setObjectName("comboBox_7")
        self.gridLayout_4.addWidget(self.comboBox_7, 12, 1, 1, 1)
        self.verticalLayout_4.addWidget(self.groupBox)
        self.groupBox_4 = QtWidgets.QGroupBox(self.scrollAreaWidgetContents)
        self.groupBox_4.setObjectName("groupBox_4")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.groupBox_4)
        self.gridLayout_3.setContentsMargins(-1, 5, -1, 5)
        self.gridLayout_3.setVerticalSpacing(3)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.label_17 = QtWidgets.QLabel(self.groupBox_4)
        self.label_17.setAlignment(QtCore.Qt.AlignCenter)
        self.label_17.setObjectName("label_17")
        self.gridLayout_3.addWidget(self.label_17, 1, 0, 1, 1)
        self.lineEdit_9 = QtWidgets.QLineEdit(self.groupBox_4)
        self.lineEdit_9.setMaximumSize(QtCore.QSize(70, 16777215))
        self.lineEdit_9.setObjectName("lineEdit_9")
        self.gridLayout_3.addWidget(self.lineEdit_9, 0, 1, 1, 1)
        self.lineEdit_10 = QtWidgets.QLineEdit(self.groupBox_4)
        self.lineEdit_10.setMaximumSize(QtCore.QSize(70, 16777215))
        self.lineEdit_10.setObjectName("lineEdit_10")
        self.gridLayout_3.addWidget(self.lineEdit_10, 0, 3, 1, 1)
        self.label_54 = QtWidgets.QLabel(self.groupBox_4)
        self.label_54.setAlignment(QtCore.Qt.AlignCenter)
        self.label_54.setObjectName("label_54")
        self.gridLayout_3.addWidget(self.label_54, 1, 2, 1, 1)
        self.lineEdit_29 = QtWidgets.QLineEdit(self.groupBox_4)
        self.lineEdit_29.setMaximumSize(QtCore.QSize(70, 16777215))
        self.lineEdit_29.setObjectName("lineEdit_29")
        self.gridLayout_3.addWidget(self.lineEdit_29, 1, 3, 1, 1)
        self.label_13 = QtWidgets.QLabel(self.groupBox_4)
        self.label_13.setAlignment(QtCore.Qt.AlignCenter)
        self.label_13.setObjectName("label_13")
        self.gridLayout_3.addWidget(self.label_13, 0, 2, 1, 1)
        self.label_12 = QtWidgets.QLabel(self.groupBox_4)
        self.label_12.setAlignment(QtCore.Qt.AlignCenter)
        self.label_12.setObjectName("label_12")
        self.gridLayout_3.addWidget(self.label_12, 0, 0, 1, 1)
        self.comboBox_16 = QtWidgets.QComboBox(self.groupBox_4)
        self.comboBox_16.setObjectName("comboBox_16")
        self.comboBox_16.addItem("")
        self.comboBox_16.addItem("")
        self.comboBox_16.addItem("")
        self.comboBox_16.addItem("")
        self.comboBox_16.addItem("")
        self.comboBox_16.addItem("")
        self.comboBox_16.addItem("")
        self.gridLayout_3.addWidget(self.comboBox_16, 1, 5, 1, 1)
        self.lineEdit_11 = QtWidgets.QLineEdit(self.groupBox_4)
        self.lineEdit_11.setMaximumSize(QtCore.QSize(70, 16777215))
        self.lineEdit_11.setObjectName("lineEdit_11")
        self.gridLayout_3.addWidget(self.lineEdit_11, 1, 1, 1, 1)
        self.label_55 = QtWidgets.QLabel(self.groupBox_4)
        self.label_55.setAlignment(QtCore.Qt.AlignCenter)
        self.label_55.setObjectName("label_55")
        self.gridLayout_3.addWidget(self.label_55, 1, 4, 1, 1)
        self.verticalLayout_4.addWidget(self.groupBox_4)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label_25 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_25.setAlignment(QtCore.Qt.AlignCenter)
        self.label_25.setObjectName("label_25")
        self.horizontalLayout_3.addWidget(self.label_25)
        self.radioButton_4 = QtWidgets.QRadioButton(self.scrollAreaWidgetContents)
        self.radioButton_4.setChecked(True)
        self.radioButton_4.setObjectName("radioButton_4")
        self.horizontalLayout_3.addWidget(self.radioButton_4)
        self.radioButton_5 = QtWidgets.QRadioButton(self.scrollAreaWidgetContents)
        self.radioButton_5.setChecked(False)
        self.radioButton_5.setObjectName("radioButton_5")
        self.horizontalLayout_3.addWidget(self.radioButton_5)
        self.verticalLayout_4.addLayout(self.horizontalLayout_3)
        self.groupBox_3 = QtWidgets.QGroupBox(self.scrollAreaWidgetContents)
        self.groupBox_3.setObjectName("groupBox_3")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.groupBox_3)
        self.gridLayout_2.setContentsMargins(-1, 5, -1, 5)
        self.gridLayout_2.setVerticalSpacing(3)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.label_3 = QtWidgets.QLabel(self.groupBox_3)
        self.label_3.setObjectName("label_3")
        self.gridLayout_2.addWidget(self.label_3, 2, 2, 1, 1)
        self.label_14 = QtWidgets.QLabel(self.groupBox_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_14.sizePolicy().hasHeightForWidth())
        self.label_14.setSizePolicy(sizePolicy)
        self.label_14.setObjectName("label_14")
        self.gridLayout_2.addWidget(self.label_14, 0, 0, 1, 1)
        self.comboBox = QtWidgets.QComboBox(self.groupBox_3)
        self.comboBox.setMinimumSize(QtCore.QSize(110, 0))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.gridLayout_2.addWidget(self.comboBox, 0, 1, 1, 1)
        self.comboBox_3 = QtWidgets.QComboBox(self.groupBox_3)
        self.comboBox_3.setObjectName("comboBox_3")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.gridLayout_2.addWidget(self.comboBox_3, 2, 1, 1, 1)
        self.label_16 = QtWidgets.QLabel(self.groupBox_3)
        self.label_16.setObjectName("label_16")
        self.gridLayout_2.addWidget(self.label_16, 2, 0, 1, 1)
        self.lineEdit_13 = QtWidgets.QLineEdit(self.groupBox_3)
        self.lineEdit_13.setMaximumSize(QtCore.QSize(150, 16777215))
        self.lineEdit_13.setObjectName("lineEdit_13")
        self.gridLayout_2.addWidget(self.lineEdit_13, 2, 3, 1, 1)
        self.label_49 = QtWidgets.QLabel(self.groupBox_3)
        self.label_49.setObjectName("label_49")
        self.gridLayout_2.addWidget(self.label_49, 3, 0, 1, 1)
        self.label_64 = QtWidgets.QLabel(self.groupBox_3)
        self.label_64.setObjectName("label_64")
        self.gridLayout_2.addWidget(self.label_64, 3, 2, 1, 1)
        self.lineEdit_27 = QtWidgets.QLineEdit(self.groupBox_3)
        self.lineEdit_27.setMaximumSize(QtCore.QSize(70, 16777215))
        self.lineEdit_27.setObjectName("lineEdit_27")
        self.gridLayout_2.addWidget(self.lineEdit_27, 3, 1, 1, 1)
        self.lineEdit_32 = QtWidgets.QLineEdit(self.groupBox_3)
        self.lineEdit_32.setMaximumSize(QtCore.QSize(70, 16777215))
        self.lineEdit_32.setObjectName("lineEdit_32")
        self.gridLayout_2.addWidget(self.lineEdit_32, 3, 3, 1, 1)
        self.verticalLayout_4.addWidget(self.groupBox_3)
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.label_39 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_39.setAlignment(QtCore.Qt.AlignCenter)
        self.label_39.setObjectName("label_39")
        self.horizontalLayout_8.addWidget(self.label_39)
        self.radioButton_14 = QtWidgets.QRadioButton(self.scrollAreaWidgetContents)
        self.radioButton_14.setChecked(True)
        self.radioButton_14.setObjectName("radioButton_14")
        self.horizontalLayout_8.addWidget(self.radioButton_14)
        self.radioButton_15 = QtWidgets.QRadioButton(self.scrollAreaWidgetContents)
        self.radioButton_15.setChecked(False)
        self.radioButton_15.setObjectName("radioButton_15")
        self.horizontalLayout_8.addWidget(self.radioButton_15)
        self.verticalLayout_4.addLayout(self.horizontalLayout_8)
        self.groupBox_7 = QtWidgets.QGroupBox(self.scrollAreaWidgetContents)
        self.groupBox_7.setObjectName("groupBox_7")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.groupBox_7)
        self.gridLayout_7.setContentsMargins(-1, 5, -1, 5)
        self.gridLayout_7.setVerticalSpacing(3)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.frame = QtWidgets.QFrame(self.groupBox_7)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.frame)
        self.gridLayout_9.setContentsMargins(-1, 3, -1, 3)
        self.gridLayout_9.setVerticalSpacing(3)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.label_41 = QtWidgets.QLabel(self.frame)
        self.label_41.setObjectName("label_41")
        self.gridLayout_9.addWidget(self.label_41, 1, 0, 1, 1)
        self.label_44 = QtWidgets.QLabel(self.frame)
        self.label_44.setObjectName("label_44")
        self.gridLayout_9.addWidget(self.label_44, 1, 2, 1, 1)
        self.comboBox_11 = QtWidgets.QComboBox(self.frame)
        self.comboBox_11.setObjectName("comboBox_11")
        self.comboBox_11.addItem("")
        self.comboBox_11.addItem("")
        self.comboBox_11.addItem("")
        self.comboBox_11.addItem("")
        self.comboBox_11.addItem("")
        self.comboBox_11.addItem("")
        self.comboBox_11.addItem("")
        self.gridLayout_9.addWidget(self.comboBox_11, 1, 1, 1, 1)
        self.label_45 = QtWidgets.QLabel(self.frame)
        self.label_45.setObjectName("label_45")
        self.gridLayout_9.addWidget(self.label_45, 1, 4, 1, 1)
        self.lineEdit_21 = QtWidgets.QLineEdit(self.frame)
        self.lineEdit_21.setObjectName("lineEdit_21")
        self.gridLayout_9.addWidget(self.lineEdit_21, 0, 1, 1, 1)
        self.lineEdit_24 = QtWidgets.QLineEdit(self.frame)
        self.lineEdit_24.setObjectName("lineEdit_24")
        self.gridLayout_9.addWidget(self.lineEdit_24, 1, 6, 1, 1)
        self.lineEdit_23 = QtWidgets.QLineEdit(self.frame)
        self.lineEdit_23.setObjectName("lineEdit_23")
        self.gridLayout_9.addWidget(self.lineEdit_23, 1, 3, 1, 1)
        self.label_42 = QtWidgets.QLabel(self.frame)
        self.label_42.setObjectName("label_42")
        self.gridLayout_9.addWidget(self.label_42, 0, 0, 1, 1)
        self.label_63 = QtWidgets.QLabel(self.frame)
        self.label_63.setObjectName("label_63")
        self.gridLayout_9.addWidget(self.label_63, 0, 4, 1, 1)
        self.lineEdit_31 = QtWidgets.QLineEdit(self.frame)
        self.lineEdit_31.setObjectName("lineEdit_31")
        self.gridLayout_9.addWidget(self.lineEdit_31, 0, 6, 1, 1)
        self.gridLayout_7.addWidget(self.frame, 1, 0, 1, 1)
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.label_40 = QtWidgets.QLabel(self.groupBox_7)
        self.label_40.setObjectName("label_40")
        self.horizontalLayout_9.addWidget(self.label_40)
        self.radioButton_16 = QtWidgets.QRadioButton(self.groupBox_7)
        self.radioButton_16.setChecked(True)
        self.radioButton_16.setObjectName("radioButton_16")
        self.horizontalLayout_9.addWidget(self.radioButton_16)
        self.radioButton_17 = QtWidgets.QRadioButton(self.groupBox_7)
        self.radioButton_17.setObjectName("radioButton_17")
        self.horizontalLayout_9.addWidget(self.radioButton_17)
        self.gridLayout_7.addLayout(self.horizontalLayout_9, 0, 0, 1, 1)
        self.frame_2 = QtWidgets.QFrame(self.groupBox_7)
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.gridLayout_10 = QtWidgets.QGridLayout(self.frame_2)
        self.gridLayout_10.setContentsMargins(-1, 3, -1, -1)
        self.gridLayout_10.setVerticalSpacing(3)
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.label_47 = QtWidgets.QLabel(self.frame_2)
        self.label_47.setObjectName("label_47")
        self.gridLayout_10.addWidget(self.label_47, 1, 0, 1, 1)
        self.lineEdit_26 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_26.setObjectName("lineEdit_26")
        self.gridLayout_10.addWidget(self.lineEdit_26, 1, 3, 1, 1)
        self.label_48 = QtWidgets.QLabel(self.frame_2)
        self.label_48.setObjectName("label_48")
        self.gridLayout_10.addWidget(self.label_48, 1, 2, 1, 1)
        self.comboBox_12 = QtWidgets.QComboBox(self.frame_2)
        self.comboBox_12.setMinimumSize(QtCore.QSize(70, 0))
        self.comboBox_12.setObjectName("comboBox_12")
        self.comboBox_12.addItem("")
        self.comboBox_12.addItem("")
        self.comboBox_12.addItem("")
        self.comboBox_12.addItem("")
        self.comboBox_12.addItem("")
        self.comboBox_12.addItem("")
        self.comboBox_12.addItem("")
        self.gridLayout_10.addWidget(self.comboBox_12, 1, 1, 1, 1)
        self.lineEdit_22 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_22.setObjectName("lineEdit_22")
        self.gridLayout_10.addWidget(self.lineEdit_22, 0, 3, 1, 1)
        self.label_46 = QtWidgets.QLabel(self.frame_2)
        self.label_46.setObjectName("label_46")
        self.gridLayout_10.addWidget(self.label_46, 0, 0, 1, 1)
        self.label_43 = QtWidgets.QLabel(self.frame_2)
        self.label_43.setObjectName("label_43")
        self.gridLayout_10.addWidget(self.label_43, 0, 2, 1, 1)
        self.lineEdit_25 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_25.setObjectName("lineEdit_25")
        self.gridLayout_10.addWidget(self.lineEdit_25, 0, 1, 1, 1)
        self.label_50 = QtWidgets.QLabel(self.frame_2)
        self.label_50.setObjectName("label_50")
        self.gridLayout_10.addWidget(self.label_50, 1, 4, 1, 1)
        self.comboBox_13 = QtWidgets.QComboBox(self.frame_2)
        self.comboBox_13.setObjectName("comboBox_13")
        self.comboBox_13.addItem("")
        self.comboBox_13.addItem("")
        self.comboBox_13.addItem("")
        self.comboBox_13.addItem("")
        self.comboBox_13.addItem("")
        self.comboBox_13.addItem("")
        self.comboBox_13.addItem("")
        self.comboBox_13.addItem("")
        self.comboBox_13.addItem("")
        self.comboBox_13.addItem("")
        self.comboBox_13.addItem("")
        self.comboBox_13.addItem("")
        self.comboBox_13.addItem("")
        self.comboBox_13.addItem("")
        self.gridLayout_10.addWidget(self.comboBox_13, 1, 5, 1, 1)
        self.gridLayout_7.addWidget(self.frame_2, 2, 0, 1, 1)
        self.verticalLayout_4.addWidget(self.groupBox_7)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.label_31 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_31.setAlignment(QtCore.Qt.AlignCenter)
        self.label_31.setObjectName("label_31")
        self.horizontalLayout_5.addWidget(self.label_31)
        self.radioButton_8 = QtWidgets.QRadioButton(self.scrollAreaWidgetContents)
        self.radioButton_8.setChecked(True)
        self.radioButton_8.setObjectName("radioButton_8")
        self.horizontalLayout_5.addWidget(self.radioButton_8)
        self.radioButton_9 = QtWidgets.QRadioButton(self.scrollAreaWidgetContents)
        self.radioButton_9.setChecked(False)
        self.radioButton_9.setObjectName("radioButton_9")
        self.horizontalLayout_5.addWidget(self.radioButton_9)
        self.verticalLayout_4.addLayout(self.horizontalLayout_5)
        self.groupBox_6 = QtWidgets.QGroupBox(self.scrollAreaWidgetContents)
        self.groupBox_6.setObjectName("groupBox_6")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.groupBox_6)
        self.gridLayout_6.setContentsMargins(-1, 5, -1, 3)
        self.gridLayout_6.setVerticalSpacing(3)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.label_37 = QtWidgets.QLabel(self.groupBox_6)
        self.label_37.setObjectName("label_37")
        self.horizontalLayout_6.addWidget(self.label_37)
        self.radioButton_12 = QtWidgets.QRadioButton(self.groupBox_6)
        self.radioButton_12.setChecked(True)
        self.radioButton_12.setObjectName("radioButton_12")
        self.horizontalLayout_6.addWidget(self.radioButton_12)
        self.radioButton_13 = QtWidgets.QRadioButton(self.groupBox_6)
        self.radioButton_13.setObjectName("radioButton_13")
        self.horizontalLayout_6.addWidget(self.radioButton_13)
        self.gridLayout_6.addLayout(self.horizontalLayout_6, 0, 0, 1, 1)
        self.gridFrame = QtWidgets.QFrame(self.groupBox_6)
        self.gridFrame.setObjectName("gridFrame")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.gridFrame)
        self.gridLayout_8.setContentsMargins(-1, 5, -1, 5)
        self.gridLayout_8.setVerticalSpacing(3)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.label_34 = QtWidgets.QLabel(self.gridFrame)
        self.label_34.setObjectName("label_34")
        self.gridLayout_8.addWidget(self.label_34, 0, 4, 1, 1)
        self.label_33 = QtWidgets.QLabel(self.gridFrame)
        self.label_33.setObjectName("label_33")
        self.gridLayout_8.addWidget(self.label_33, 0, 2, 1, 1)
        self.lineEdit_17 = QtWidgets.QLineEdit(self.gridFrame)
        self.lineEdit_17.setMinimumSize(QtCore.QSize(50, 0))
        self.lineEdit_17.setObjectName("lineEdit_17")
        self.gridLayout_8.addWidget(self.lineEdit_17, 0, 1, 1, 1)
        self.lineEdit_19 = QtWidgets.QLineEdit(self.gridFrame)
        self.lineEdit_19.setObjectName("lineEdit_19")
        self.gridLayout_8.addWidget(self.lineEdit_19, 0, 5, 1, 1)
        self.label_35 = QtWidgets.QLabel(self.gridFrame)
        self.label_35.setObjectName("label_35")
        self.gridLayout_8.addWidget(self.label_35, 0, 6, 1, 1)
        self.label_32 = QtWidgets.QLabel(self.gridFrame)
        self.label_32.setObjectName("label_32")
        self.gridLayout_8.addWidget(self.label_32, 0, 0, 1, 1)
        self.lineEdit_20 = QtWidgets.QLineEdit(self.gridFrame)
        self.lineEdit_20.setObjectName("lineEdit_20")
        self.gridLayout_8.addWidget(self.lineEdit_20, 0, 7, 1, 1)
        self.lineEdit_18 = QtWidgets.QLineEdit(self.gridFrame)
        self.lineEdit_18.setMinimumSize(QtCore.QSize(50, 0))
        self.lineEdit_18.setObjectName("lineEdit_18")
        self.gridLayout_8.addWidget(self.lineEdit_18, 0, 3, 1, 1)
        self.label_36 = QtWidgets.QLabel(self.gridFrame)
        self.label_36.setObjectName("label_36")
        self.gridLayout_8.addWidget(self.label_36, 1, 0, 1, 1)
        self.radioButton_10 = QtWidgets.QRadioButton(self.gridFrame)
        self.radioButton_10.setChecked(True)
        self.radioButton_10.setObjectName("radioButton_10")
        self.gridLayout_8.addWidget(self.radioButton_10, 1, 1, 1, 1)
        self.radioButton_11 = QtWidgets.QRadioButton(self.gridFrame)
        self.radioButton_11.setObjectName("radioButton_11")
        self.gridLayout_8.addWidget(self.radioButton_11, 1, 2, 1, 1)
        self.textEdit_3 = QtWidgets.QTextEdit(self.gridFrame)
        self.textEdit_3.setMaximumSize(QtCore.QSize(16777215, 30))
        self.textEdit_3.setObjectName("textEdit_3")
        self.gridLayout_8.addWidget(self.textEdit_3, 1, 5, 1, 1)
        self.label_60 = QtWidgets.QLabel(self.gridFrame)
        self.label_60.setObjectName("label_60")
        self.gridLayout_8.addWidget(self.label_60, 1, 4, 1, 1)
        self.gridLayout_6.addWidget(self.gridFrame, 1, 0, 1, 1)
        self.verticalLayout_4.addWidget(self.groupBox_6)
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.label_65 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_65.setObjectName("label_65")
        self.horizontalLayout_10.addWidget(self.label_65)
        self.radioButton_18 = QtWidgets.QRadioButton(self.scrollAreaWidgetContents)
        self.radioButton_18.setObjectName("radioButton_18")
        self.horizontalLayout_10.addWidget(self.radioButton_18)
        self.radioButton_19 = QtWidgets.QRadioButton(self.scrollAreaWidgetContents)
        self.radioButton_19.setChecked(True)
        self.radioButton_19.setObjectName("radioButton_19")
        self.horizontalLayout_10.addWidget(self.radioButton_19)
        self.verticalLayout_4.addLayout(self.horizontalLayout_10)
        self.groupBox_8 = QtWidgets.QGroupBox(self.scrollAreaWidgetContents)
        self.groupBox_8.setObjectName("groupBox_8")
        self.gridLayout_11 = QtWidgets.QGridLayout(self.groupBox_8)
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.label_66 = QtWidgets.QLabel(self.groupBox_8)
        self.label_66.setObjectName("label_66")
        self.gridLayout_11.addWidget(self.label_66, 1, 1, 1, 1)
        self.lineEdit_33 = QtWidgets.QLineEdit(self.groupBox_8)
        self.lineEdit_33.setMaximumSize(QtCore.QSize(70, 16777215))
        self.lineEdit_33.setObjectName("lineEdit_33")
        self.gridLayout_11.addWidget(self.lineEdit_33, 1, 2, 1, 1)
        self.label_68 = QtWidgets.QLabel(self.groupBox_8)
        self.label_68.setMaximumSize(QtCore.QSize(300, 16777215))
        self.label_68.setTextFormat(QtCore.Qt.AutoText)
        self.label_68.setWordWrap(True)
        self.label_68.setObjectName("label_68")
        self.gridLayout_11.addWidget(self.label_68, 1, 0, 1, 1)
        self.pushButton_4 = QtWidgets.QPushButton(self.groupBox_8)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_4.sizePolicy().hasHeightForWidth())
        self.pushButton_4.setSizePolicy(sizePolicy)
        self.pushButton_4.setObjectName("pushButton_4")
        self.gridLayout_11.addWidget(self.pushButton_4, 3, 1, 1, 1)
        self.pushButton_5 = QtWidgets.QPushButton(self.groupBox_8)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_5.sizePolicy().hasHeightForWidth())
        self.pushButton_5.setSizePolicy(sizePolicy)
        self.pushButton_5.setObjectName("pushButton_5")
        self.gridLayout_11.addWidget(self.pushButton_5, 3, 2, 1, 1)
        self.label_67 = QtWidgets.QLabel(self.groupBox_8)
        self.label_67.setObjectName("label_67")
        self.gridLayout_11.addWidget(self.label_67, 1, 3, 1, 1)
        self.lineEdit_34 = QtWidgets.QLineEdit(self.groupBox_8)
        self.lineEdit_34.setMaximumSize(QtCore.QSize(70, 16777215))
        self.lineEdit_34.setObjectName("lineEdit_34")
        self.gridLayout_11.addWidget(self.lineEdit_34, 1, 4, 1, 1)
        self.label_71 = QtWidgets.QLabel(self.groupBox_8)
        self.label_71.setObjectName("label_71")
        self.gridLayout_11.addWidget(self.label_71, 2, 1, 1, 1)
        self.label_72 = QtWidgets.QLabel(self.groupBox_8)
        self.label_72.setObjectName("label_72")
        self.gridLayout_11.addWidget(self.label_72, 2, 3, 1, 1)
        self.lineEdit_37 = QtWidgets.QLineEdit(self.groupBox_8)
        self.lineEdit_37.setMaximumSize(QtCore.QSize(70, 16777215))
        self.lineEdit_37.setObjectName("lineEdit_37")
        self.gridLayout_11.addWidget(self.lineEdit_37, 2, 2, 1, 1)
        self.lineEdit_38 = QtWidgets.QLineEdit(self.groupBox_8)
        self.lineEdit_38.setMaximumSize(QtCore.QSize(70, 16777215))
        self.lineEdit_38.setObjectName("lineEdit_38")
        self.gridLayout_11.addWidget(self.lineEdit_38, 2, 4, 1, 1)
        self.verticalLayout_4.addWidget(self.groupBox_8)
        self.textBrowser = QtWidgets.QTextBrowser(self.scrollAreaWidgetContents)
        self.textBrowser.setMaximumSize(QtCore.QSize(16777215, 80))
        self.textBrowser.setObjectName("textBrowser")
        self.verticalLayout_4.addWidget(self.textBrowser)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.pushButton_3 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_3.sizePolicy().hasHeightForWidth())
        self.pushButton_3.setSizePolicy(sizePolicy)
        self.pushButton_3.setMaximumSize(QtCore.QSize(100, 16777215))
        self.pushButton_3.setObjectName("pushButton_3")
        self.horizontalLayout_7.addWidget(self.pushButton_3)
        self.pushButton_2 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_2.sizePolicy().hasHeightForWidth())
        self.pushButton_2.setSizePolicy(sizePolicy)
        self.pushButton_2.setMaximumSize(QtCore.QSize(100, 16777215))
        self.pushButton_2.setObjectName("pushButton_2")
        self.horizontalLayout_7.addWidget(self.pushButton_2)
        self.verticalLayout_4.addLayout(self.horizontalLayout_7)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.horizontalLayout_2.addWidget(self.scrollArea)
        self.horizontalLayout_2.setStretch(0, 2)
        self.horizontalLayout_2.setStretch(1, 1)
        self.verticalLayout_2.addLayout(self.horizontalLayout_2)

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.label.setText(_translate("Dialog", "nc文件路径："))
        self.pushButton.setText(_translate("Dialog", "选择"))
        self.label_2.setText(_translate("Dialog", "缩略图："))
        self.radioButton_6.setText(_translate("Dialog", "沿纬度绘制"))
        self.radioButton_7.setText(_translate("Dialog", "沿经度绘制"))
        self.groupBox.setTitle(_translate("Dialog", "经纬度及网格"))
        self.label_8.setText(_translate("Dialog", "纬度："))
        self.label_73.setText(_translate("Dialog", "标题大小："))
        self.comboBox_14.setItemText(0, _translate("Dialog", "gray"))
        self.comboBox_14.setItemText(1, _translate("Dialog", "black"))
        self.comboBox_14.setItemText(2, _translate("Dialog", "white"))
        self.comboBox_14.setItemText(3, _translate("Dialog", "red"))
        self.comboBox_14.setItemText(4, _translate("Dialog", "blue"))
        self.comboBox_14.setItemText(5, _translate("Dialog", "green"))
        self.comboBox_14.setItemText(6, _translate("Dialog", "yellow"))
        self.label_19.setText(_translate("Dialog", "末（hPa）："))
        self.label_10.setText(_translate("Dialog", "间隔（大）（hPa）："))
        self.label_6.setText(_translate("Dialog", "经度间隔（大）："))
        self.label_7.setText(_translate("Dialog", "经度间隔（小）："))
        self.label_51.setText(_translate("Dialog", "网格粗细："))
        self.label_38.setText(_translate("Dialog", "图题："))
        self.label_5.setText(_translate("Dialog", "经度末："))
        self.comboBox_15.setItemText(0, _translate("Dialog", "--"))
        self.comboBox_15.setItemText(1, _translate("Dialog", "-"))
        self.comboBox_15.setItemText(2, _translate("Dialog", "-."))
        self.comboBox_15.setItemText(3, _translate("Dialog", ":"))
        self.label_52.setText(_translate("Dialog", "网格颜色："))
        self.lineEdit_39.setText(_translate("Dialog", "10"))
        self.label_4.setText(_translate("Dialog", "经度始："))
        self.label_53.setText(_translate("Dialog", "网格线型："))
        self.label_11.setText(_translate("Dialog", "间隔（小）（hPa）："))
        self.lineEdit_28.setText(_translate("Dialog", "1"))
        self.label_9.setText(_translate("Dialog", "始（hPa）："))
        self.label_20.setText(_translate("Dialog", "横坐标网格点："))
        self.label_27.setText(_translate("Dialog", "时间："))
        self.groupBox_4.setTitle(_translate("Dialog", "图片设置"))
        self.label_17.setText(_translate("Dialog", "DPI："))
        self.lineEdit_9.setText(_translate("Dialog", "8"))
        self.lineEdit_10.setText(_translate("Dialog", "4"))
        self.label_54.setText(_translate("Dialog", "坐标轴字体大小："))
        self.lineEdit_29.setText(_translate("Dialog", "10"))
        self.label_13.setText(_translate("Dialog", "图片高："))
        self.label_12.setText(_translate("Dialog", "图片长："))
        self.comboBox_16.setItemText(0, _translate("Dialog", "black"))
        self.comboBox_16.setItemText(1, _translate("Dialog", "white"))
        self.comboBox_16.setItemText(2, _translate("Dialog", "gray"))
        self.comboBox_16.setItemText(3, _translate("Dialog", "red"))
        self.comboBox_16.setItemText(4, _translate("Dialog", "blue"))
        self.comboBox_16.setItemText(5, _translate("Dialog", "green"))
        self.comboBox_16.setItemText(6, _translate("Dialog", "yellow"))
        self.lineEdit_11.setText(_translate("Dialog", "150"))
        self.label_55.setText(_translate("Dialog", "坐标轴字体颜色："))
        self.label_25.setText(_translate("Dialog", "是否填充等高线："))
        self.radioButton_4.setText(_translate("Dialog", "是"))
        self.radioButton_5.setText(_translate("Dialog", "否"))
        self.groupBox_3.setTitle(_translate("Dialog", "等高线（填充）"))
        self.label_3.setText(_translate("Dialog", "变化间隔："))
        self.label_14.setText(_translate("Dialog", "填充种类："))
        self.comboBox.setItemText(0, _translate("Dialog", "温度（℃）"))
        self.comboBox.setItemText(1, _translate("Dialog", "相对湿度（%）"))
        self.comboBox_3.setItemText(0, _translate("Dialog", "jet"))
        self.comboBox_3.setItemText(1, _translate("Dialog", "turbo"))
        self.comboBox_3.setItemText(2, _translate("Dialog", "hsv"))
        self.comboBox_3.setItemText(3, _translate("Dialog", "bwr"))
        self.comboBox_3.setItemText(4, _translate("Dialog", "seismic"))
        self.comboBox_3.setItemText(5, _translate("Dialog", "plasma"))
        self.comboBox_3.setItemText(6, _translate("Dialog", "rainbow"))
        self.label_16.setText(_translate("Dialog", "填色种类："))
        self.label_49.setText(_translate("Dialog", "填色最小值："))
        self.label_64.setText(_translate("Dialog", "填色最大值："))
        self.label_39.setText(_translate("Dialog", "是否绘制风向："))
        self.radioButton_14.setText(_translate("Dialog", "是"))
        self.radioButton_15.setText(_translate("Dialog", "否"))
        self.groupBox_7.setTitle(_translate("Dialog", "风向"))
        self.label_41.setText(_translate("Dialog", "箭头颜色："))
        self.label_44.setText(_translate("Dialog", "箭头轴宽："))
        self.comboBox_11.setItemText(0, _translate("Dialog", "black"))
        self.comboBox_11.setItemText(1, _translate("Dialog", "white"))
        self.comboBox_11.setItemText(2, _translate("Dialog", "gray"))
        self.comboBox_11.setItemText(3, _translate("Dialog", "red"))
        self.comboBox_11.setItemText(4, _translate("Dialog", "blue"))
        self.comboBox_11.setItemText(5, _translate("Dialog", "green"))
        self.comboBox_11.setItemText(6, _translate("Dialog", "yellow"))
        self.label_45.setText(_translate("Dialog", "箭头宽："))
        self.lineEdit_21.setText(_translate("Dialog", "1"))
        self.lineEdit_24.setText(_translate("Dialog", "4"))
        self.lineEdit_23.setText(_translate("Dialog", "0.0018"))
        self.label_42.setText(_translate("Dialog", "间隔多少绘制："))
        self.label_63.setText(_translate("Dialog", "箭头大小："))
        self.lineEdit_31.setText(_translate("Dialog", "250"))
        self.label_40.setText(_translate("Dialog", "类型："))
        self.radioButton_16.setText(_translate("Dialog", "箭头"))
        self.radioButton_17.setText(_translate("Dialog", "流线"))
        self.label_47.setText(_translate("Dialog", "颜色："))
        self.lineEdit_26.setText(_translate("Dialog", "0.8"))
        self.label_48.setText(_translate("Dialog", "线条粗细："))
        self.comboBox_12.setItemText(0, _translate("Dialog", "black"))
        self.comboBox_12.setItemText(1, _translate("Dialog", "white"))
        self.comboBox_12.setItemText(2, _translate("Dialog", "gray"))
        self.comboBox_12.setItemText(3, _translate("Dialog", "red"))
        self.comboBox_12.setItemText(4, _translate("Dialog", "blue"))
        self.comboBox_12.setItemText(5, _translate("Dialog", "green"))
        self.comboBox_12.setItemText(6, _translate("Dialog", "yellow"))
        self.lineEdit_22.setText(_translate("Dialog", "1"))
        self.label_46.setText(_translate("Dialog", "密度："))
        self.label_43.setText(_translate("Dialog", "箭头大小："))
        self.lineEdit_25.setText(_translate("Dialog", "0.7"))
        self.label_50.setText(_translate("Dialog", "箭头种类："))
        self.comboBox_13.setItemText(0, _translate("Dialog", "-|>"))
        self.comboBox_13.setItemText(1, _translate("Dialog", "-"))
        self.comboBox_13.setItemText(2, _translate("Dialog", "->"))
        self.comboBox_13.setItemText(3, _translate("Dialog", "-["))
        self.comboBox_13.setItemText(4, _translate("Dialog", "<-"))
        self.comboBox_13.setItemText(5, _translate("Dialog", "<->"))
        self.comboBox_13.setItemText(6, _translate("Dialog", "<|-"))
        self.comboBox_13.setItemText(7, _translate("Dialog", "<|-|>"))
        self.comboBox_13.setItemText(8, _translate("Dialog", "]-"))
        self.comboBox_13.setItemText(9, _translate("Dialog", "]-["))
        self.comboBox_13.setItemText(10, _translate("Dialog", "fancy"))
        self.comboBox_13.setItemText(11, _translate("Dialog", "simple"))
        self.comboBox_13.setItemText(12, _translate("Dialog", "wedge"))
        self.comboBox_13.setItemText(13, _translate("Dialog", "|-|"))
        self.label_31.setText(_translate("Dialog", "是否绘制图例："))
        self.radioButton_8.setText(_translate("Dialog", "是"))
        self.radioButton_9.setText(_translate("Dialog", "否"))
        self.groupBox_6.setTitle(_translate("Dialog", "图例（仅是填充的图例）"))
        self.label_37.setText(_translate("Dialog", "默认值："))
        self.radioButton_12.setText(_translate("Dialog", "是"))
        self.radioButton_13.setText(_translate("Dialog", "否"))
        self.label_34.setText(_translate("Dialog", "图例长："))
        self.label_33.setText(_translate("Dialog", "垂直定位："))
        self.label_35.setText(_translate("Dialog", "图例高："))
        self.label_32.setText(_translate("Dialog", "水平定位："))
        self.label_36.setText(_translate("Dialog", "方向："))
        self.radioButton_10.setText(_translate("Dialog", "垂直"))
        self.radioButton_11.setText(_translate("Dialog", "水平"))
        self.label_60.setText(_translate("Dialog", "图例名："))
        self.label_65.setText(_translate("Dialog", "是否需要同时绘制多张图片："))
        self.radioButton_18.setText(_translate("Dialog", "是"))
        self.radioButton_19.setText(_translate("Dialog", "否"))
        self.groupBox_8.setTitle(_translate("Dialog", "多张图片绘制"))
        self.label_66.setText(_translate("Dialog", "横向图片数："))
        self.lineEdit_33.setText(_translate("Dialog", "1"))
        self.label_68.setText(_translate("Dialog", "注：图片添加顺序是从左到右，从上到下。共用图例。需要添加图片的话在上方修改好参数后添加。"))
        self.pushButton_4.setText(_translate("Dialog", "添加"))
        self.pushButton_5.setText(_translate("Dialog", "重置"))
        self.label_67.setText(_translate("Dialog", "纵向图片数："))
        self.lineEdit_34.setText(_translate("Dialog", "1"))
        self.label_71.setText(_translate("Dialog", "子图横向间距："))
        self.label_72.setText(_translate("Dialog", "子图纵向间距："))
        self.lineEdit_37.setText(_translate("Dialog", "0.2"))
        self.lineEdit_38.setText(_translate("Dialog", "0.35"))
        self.pushButton_3.setText(_translate("Dialog", "绘图"))
        self.pushButton_2.setText(_translate("Dialog", "保存"))


        '''以下为个人编辑内容'''
        # 控制ui的radiobutton部分
        self.radioButton_group1 = QButtonGroup()  # 控制等高线填充的buttongroup
        self.radioButton_group1.addButton(self.radioButton_4)
        self.radioButton_group1.addButton(self.radioButton_5)
        self.radioButton_4.toggled.connect(self.radioButton_control)
        self.radioButton_5.toggled.connect(self.radioButton_control)
        self.radioButton_group2 = QButtonGroup()  # 控制等高线轮廓的buttongroup
        self.radioButton_group2.addButton(self.radioButton_6)
        self.radioButton_group2.addButton(self.radioButton_7)
        self.radioButton_6.toggled.connect(self.radioButton_control)
        self.radioButton_7.toggled.connect(self.radioButton_control)
        self.radioButton_group3 = QButtonGroup()  # 控制风向的buttongroup
        self.radioButton_group3.addButton(self.radioButton_14)
        self.radioButton_group3.addButton(self.radioButton_15)
        self.radioButton_14.toggled.connect(self.radioButton_control)
        self.radioButton_15.toggled.connect(self.radioButton_control)
        self.radioButton_group4 = QButtonGroup()  # 控制图例的buttongroup
        self.radioButton_group4.addButton(self.radioButton_8)
        self.radioButton_group4.addButton(self.radioButton_9)
        self.radioButton_8.toggled.connect(self.radioButton_control)
        self.radioButton_9.toggled.connect(self.radioButton_control)
        # 每个模块内的radiobutton部分
        self.radioButton_group6 = QButtonGroup()  # 控制风向模块的buttongroup
        self.radioButton_group6.addButton(self.radioButton_16)
        self.radioButton_group6.addButton(self.radioButton_17)
        self.radioButton_16.toggled.connect(self.radioButton_control)
        self.radioButton_17.toggled.connect(self.radioButton_control)
        self.frame_2.hide()
        self.radioButton_group7 = QButtonGroup()  # 控制图例模块1的buttongroup
        self.radioButton_group7.addButton(self.radioButton_12)
        self.radioButton_group7.addButton(self.radioButton_13)
        self.radioButton_12.toggled.connect(self.radioButton_control)
        self.radioButton_13.toggled.connect(self.radioButton_control)
        self.gridFrame.hide()
        self.radioButton_group8 = QButtonGroup()  # 控制图例模块2的buttongroup
        self.radioButton_group8.addButton(self.radioButton_10)
        self.radioButton_group8.addButton(self.radioButton_11)
        self.radioButton_group9 = QButtonGroup() # 控制是否需要多个图片的buttongroup
        self.radioButton_group9.addButton(self.radioButton_18)
        self.radioButton_group9.addButton(self.radioButton_19)
        self.radioButton_18.toggled.connect(self.radioButton_control)
        self.radioButton_19.toggled.connect(self.radioButton_control)
        # 初始化设置
        self.radioButton_5.setChecked(True)
        self.radioButton_15.setChecked(True)
        self.radioButton_9.setChecked(True)
        self.radioButton_6.setChecked(True)
        # 选择文件按钮
        self.pushButton.clicked.connect(self.choosencfile)
        # 绘图按钮
        self.pushButton_3.clicked.connect(self.judge_draw_multi_or_not)
        self.pushButton_4.clicked.connect(self.draw_multi_pic_start)
        # combobox监控
        self.comboBox.currentIndexChanged.connect(self.fill_max_min_online)
        self.comboBox_7.currentIndexChanged.connect(self.fill_max_min_online)
        # 初始化的一些隐藏单位
        self.groupBox_8.hide()
        self.textBrowser.hide()
        # 保存按钮
        self.pushButton_2.clicked.connect(self.save_fig_btn)
        #重置按钮
        self.pushButton_5.clicked.connect(self.refresh)
        # 下面这个数字用于计多个绘图的数
        self.current_multi_pic=1

    def radioButton_control(self):  # 用于控制所有ui界面显示的radiobutton
        # 控制等高线填充的groupbox
        if self.radioButton_4.isChecked() == True:
            self.groupBox_3.show()
        if self.radioButton_5.isChecked() == True:
            self.groupBox_3.hide()
        # 控制等高线轮廓的groupbox
        if self.radioButton_6.isChecked() == True:
            self.label_4.setText('经度始：')
            self.label_5.setText('经度末：')
            self.label_6.setText('经度间隔（大）：')
            self.label_7.setText('经度间隔（小）：')
            self.label_8.setText('纬度：')
        if self.radioButton_7.isChecked() == True:
            self.label_4.setText('纬度始：')
            self.label_5.setText('纬度末：')
            self.label_6.setText('纬度间隔（大）：')
            self.label_7.setText('纬度间隔（小）：')
            self.label_8.setText('经度：')
        # 控制风向的groupbox
        if self.radioButton_14.isChecked() == True:
            self.groupBox_7.show()
        if self.radioButton_15.isChecked() == True:
            self.groupBox_7.hide()
        # 控制图例的groupbox
        if self.radioButton_8.isChecked() == True:
            self.groupBox_6.show()
        if self.radioButton_9.isChecked() == True:
            self.groupBox_6.hide()
        # 控制箭头和流线的groupbox
        if self.radioButton_16.isChecked() == True:
            self.frame.show()
            self.frame_2.hide()
        if self.radioButton_17.isChecked() == True:
            self.frame_2.show()
            self.frame.hide()
        # 控制图例默认与否的groupbox
        if self.radioButton_12.isChecked() == True:
            self.gridFrame.hide()
        if self.radioButton_13.isChecked() == True:
            self.gridFrame.show()
        # 控制是否需要多张图片的groupbox
        if self.radioButton_19.isChecked() == True:
            self.groupBox_8.hide()
            self.textBrowser.hide()
        if self.radioButton_18.isChecked() == True:
            self.groupBox_8.show()
            self.textBrowser.show()

    # 选文件的函数
    def choosencfile(self):
        self.path, self.filetype = QtWidgets.QFileDialog.getOpenFileName(directory="C:/", filter="NC file (*.nc);;")
        self.textEdit.setText(self.path)
        timelist = self.get_ncfile_time(self.path)
        self.comboBox_7.addItems(timelist)
        #初步填充最小值和最大值
        self.fill_max_min_value(self.comboBox.currentIndex(),self.comboBox_7.currentIndex(),
                                self.lineEdit_27,self.lineEdit_32)
        self.fill_max_min_value(2,self.comboBox_7.currentIndex(),
                                self.lineEdit_14,self.lineEdit_7)

    # 填充combobox的时间
    def get_ncfile_time(self, path):
        timelist = []
        self.ncfile = nc.Dataset(path)
        time = getvar(self.ncfile, 'times')
        time = to_np(time)
        time = str(time)
        time = time[0:-10]
        times = getvar(self.ncfile, 'xtimes', timeidx=ALL_TIMES)
        formal_datetime = datetime.strptime(time, '%Y-%m-%dT%H:%M:%S')
        for i in times:
            timelist.append(str(formal_datetime + timedelta(minutes=int(i))))
        timelist.append('ALL')
        self.time_num = len(timelist)
        return timelist

    #填充最小值
    def fill_max_min_value(self,type,time,lineEdit_min,lineEdit_max):
        if type == 0:
            factor = to_np(getvar(self.ncfile, 'tc', timeidx=time))
        if type == 1:
            factor = to_np(getvar(self.ncfile, 'rh', timeidx=time))
        if type == 2:
            factor = to_np(getvar(self.ncfile, 'pressure', timeidx=time))
        lineEdit_min.setText(str(np.min(factor)))
        lineEdit_max.setText(str(np.max(factor)))

    #实时修改最小最大值
    def fill_max_min_online(self):
        self.fill_max_min_value(self.comboBox.currentIndex(),self.comboBox_7.currentIndex(),
                                self.lineEdit_27,self.lineEdit_32)
        self.fill_max_min_value(2,self.comboBox_7.currentIndex(),
                                self.lineEdit_14,self.lineEdit_7)

    def judge_draw_multi_or_not(self):
        if self.radioButton_19.isChecked()==True:
            self.draw_pic()
        if self.radioButton_18.isChecked()==True:
            #在这里多张绘图的绘图功能是展示，绘图在draw_multi_pic功能用，由添加按钮实现。
            self.show_multi_pic()

    #绘制单张图片
    '''解决了异常的版本
    def draw_pic(self):
        try:
            width, height, dpi, title = float(self.lineEdit_9.text()), float(self.lineEdit_10.text()), float(
                self.lineEdit_11.text()), self.textEdit_2.toPlainText()
            start_x, end_x, big_interval_x, small_interval_x = \
                float(self.lineEdit.text()), float(self.lineEdit_5.text()), float(self.lineEdit_2.text()), float(
                    self.lineEdit_6.text())
            start_p, end_p, big_interval_p, small_interval_p = \
                float(self.lineEdit_7.text()), float(self.lineEdit_14.text()), float(self.lineEdit_4.text()), float(
                    self.lineEdit_8.text())
            x_grid, point_line=float(self.lineEdit_15.text()),float(self.lineEdit_3.text())
            gridline_color, gridline_width, gridline_style = \
                self.comboBox_14.currentText(), float(self.lineEdit_28.text()), self.comboBox_15.currentText()
            axis_font_size, axis_font_color = float(self.lineEdit_29.text()), self.comboBox_16.currentText()
            pic = Figure_Canvas(width, height, dpi)
            lat_or_lon=None
            if self.radioButton_6.isChecked()==True:
                lat_or_lon=0
            if self.radioButton_7.isChecked()==True:
                lat_or_lon=1
            # 实例化一个FigureCanvas
            # 画出基本部分
            pic.draw_main_part(title, float(self.lineEdit_39.text()),
                               start_x, end_x, big_interval_x, small_interval_x,x_grid,point_line,
                               start_p, end_p, big_interval_p, small_interval_p,
                               gridline_color, gridline_width, gridline_style,
                               axis_font_size, axis_font_color,lat_or_lon)

            # 画出等高线填充部分
            if self.radioButton_4.isChecked() == True:
                pic.draw_contourf(self.ncfile, self.comboBox.currentIndex(), self.comboBox_7.currentIndex(),
                                  self.comboBox_3.currentText(), float(self.lineEdit_13.text()),
                                  float(self.lineEdit_27.text()), float(self.lineEdit_32.text()),lat_or_lon)
            # 画出风向部分
            if self.radioButton_14.isChecked() == True:
                if self.radioButton_16.isChecked() == True:
                    pic.draw_quiver(self.ncfile, int(self.lineEdit_21.text()),self.comboBox_7.currentIndex(),
                                    self.comboBox_11.currentText(),float(self.lineEdit_23.text()),
                                    float(self.lineEdit_24.text()), float(self.lineEdit_31.text()),lat_or_lon)
                if self.radioButton_17.isChecked() == True:
                    pic.draw_streamplot(self.ncfile, float(self.lineEdit_25.text()), self.comboBox_7.currentIndex(),
                                        float(self.lineEdit_22.text()),self.comboBox_12.currentText(),
                                        float(self.lineEdit_26.text()), self.comboBox_13.currentText(),lat_or_lon)
            # 画出colorbar部分
            orientation = None
            if self.radioButton_8.isChecked() == True:
                if self.radioButton_12.isChecked() == True:
                    pic.draw_colorbar(0, self.comboBox.currentText())
                if self.radioButton_13.isChecked() == True:
                    if self.radioButton_10.isChecked() == True:
                        orientation = 'vertical'
                    if self.radioButton_11.isChecked() == True:
                        orientation = 'horizontal'
                    pic.draw_colorbar(1, self.textEdit_3.toPlainText(), hor_position=float(self.lineEdit_17.text()),
                                      ver_position=float(self.lineEdit_18.text()),
                                      hor_length=float(self.lineEdit_19.text()),
                                      ver_length=float(self.lineEdit_20.text()), orientation=orientation)
            graphicscene = QtWidgets.QGraphicsScene()  # 第三步，创建一个QGraphicsScene，因为加载的图形（FigureCanvas）不能直接放到graphicview控件中，必须先放到graphicScene，然后再把graphicscene放到graphicview中
            graphicscene.addWidget(pic)  # 第四步，把图形放到QGraphicsScene中，注意：图形是作为一个QWidget放到QGraphicsScene中的
            self.graphicsView.setScene(graphicscene)  # 第五步，把QGraphicsScene放入QGraphicsView
            self.graphicsView.show()  # 最后，调用show方法呈现图形！Voila!!
            self.pic = pic
        except (ValueError,RuntimeError,AttributeError):
            QtWidgets.QMessageBox.critical(None, "错误", "某些参数设置错误或未设置")
    '''
    #没有解决异常的版本
    def draw_pic(self):
        width, height, dpi, title = float(self.lineEdit_9.text()), float(self.lineEdit_10.text()), float(
            self.lineEdit_11.text()), self.textEdit_2.toPlainText()
        start_x, end_x, big_interval_x, small_interval_x = \
            float(self.lineEdit.text()), float(self.lineEdit_5.text()), float(self.lineEdit_2.text()), float(
                self.lineEdit_6.text())
        start_p, end_p, big_interval_p, small_interval_p = \
            float(self.lineEdit_14.text()), float(self.lineEdit_7.text()), float(self.lineEdit_4.text()), float(
                self.lineEdit_8.text())
        x_grid, point_line = float(self.lineEdit_15.text()), float(self.lineEdit_3.text())
        gridline_color, gridline_width, gridline_style = \
            self.comboBox_14.currentText(), float(self.lineEdit_28.text()), self.comboBox_15.currentText()
        axis_font_size, axis_font_color = float(self.lineEdit_29.text()), self.comboBox_16.currentText()
        pic = Figure_Canvas(width, height, dpi)
        lat_or_lon = None
        if self.radioButton_6.isChecked() == True:
            lat_or_lon = 0
        if self.radioButton_7.isChecked() == True:
            lat_or_lon = 1
        # 实例化一个FigureCanvas
        # 画出基本部分
        pic.draw_main_part(title, float(self.lineEdit_39.text()),
                           start_x, end_x, big_interval_x, small_interval_x, x_grid, point_line,
                           start_p, end_p, big_interval_p, small_interval_p,
                           gridline_color, gridline_width, gridline_style,
                           axis_font_size, axis_font_color, lat_or_lon)

        # 画出等高线填充部分
        if self.radioButton_4.isChecked() == True:
            pic.draw_contourf(self.ncfile, self.comboBox.currentIndex(), self.comboBox_7.currentIndex(),
                              self.comboBox_3.currentText(), float(self.lineEdit_13.text()),
                              float(self.lineEdit_27.text()), float(self.lineEdit_32.text()), lat_or_lon)
        # 画出风向部分
        if self.radioButton_14.isChecked() == True:
            if self.radioButton_16.isChecked() == True:
                pic.draw_quiver(self.ncfile, int(self.lineEdit_21.text()), self.comboBox_7.currentIndex(),
                                self.comboBox_11.currentText(), float(self.lineEdit_23.text()),
                                float(self.lineEdit_24.text()), float(self.lineEdit_31.text()), lat_or_lon)
            if self.radioButton_17.isChecked() == True:
                pic.draw_streamplot(self.ncfile, float(self.lineEdit_25.text()), self.comboBox_7.currentIndex(),
                                    float(self.lineEdit_22.text()), self.comboBox_12.currentText(),
                                    float(self.lineEdit_26.text()), self.comboBox_13.currentText(), lat_or_lon)
        # 画出colorbar部分
        orientation = None
        if self.radioButton_8.isChecked() == True:
            if self.radioButton_12.isChecked() == True:
                pic.draw_colorbar(0, self.comboBox.currentText())
            if self.radioButton_13.isChecked() == True:
                if self.radioButton_10.isChecked() == True:
                    orientation = 'vertical'
                if self.radioButton_11.isChecked() == True:
                    orientation = 'horizontal'
                pic.draw_colorbar(1, self.textEdit_3.toPlainText(), hor_position=float(self.lineEdit_17.text()),
                                  ver_position=float(self.lineEdit_18.text()),
                                  hor_length=float(self.lineEdit_19.text()),
                                  ver_length=float(self.lineEdit_20.text()), orientation=orientation)
        graphicscene = QtWidgets.QGraphicsScene()  # 第三步，创建一个QGraphicsScene，因为加载的图形（FigureCanvas）不能直接放到graphicview控件中，必须先放到graphicScene，然后再把graphicscene放到graphicview中
        graphicscene.addWidget(pic)  # 第四步，把图形放到QGraphicsScene中，注意：图形是作为一个QWidget放到QGraphicsScene中的
        self.graphicsView.setScene(graphicscene)  # 第五步，把QGraphicsScene放入QGraphicsView
        self.graphicsView.show()  # 最后，调用show方法呈现图形！Voila!!
        self.pic = pic

    def draw_multi_pic_start(self):
        print(self.current_multi_pic)
        width, height, dpi = float(self.lineEdit_9.text()), float(self.lineEdit_10.text()), float(
            self.lineEdit_11.text())
        if self.current_multi_pic==1:
            self.pic = Figure_Canvas(width, height, dpi)
            self.draw_multi_pic()
        else:
            self.draw_multi_pic()

    #绘制多张图片的细节部分
    def draw_multi_pic(self):
        try:
            title=self.textEdit_2.toPlainText()
            start_lon, end_lon, big_interval_lon, small_interval_lon = \
                float(self.lineEdit.text()), float(self.lineEdit_5.text()), float(self.lineEdit_2.text()), float(
                    self.lineEdit_6.text())
            start_lat, end_lat, big_interval_lat, small_interval_lat = \
                float(self.lineEdit_3.text()), float(self.lineEdit_7.text()), float(self.lineEdit_4.text()), float(
                    self.lineEdit_8.text())
            gridline_color, gridline_width, gridline_style = \
                self.comboBox_14.currentText(), float(self.lineEdit_28.text()), self.comboBox_15.currentText()
            axis_font_size, axis_font_color = float(self.lineEdit_29.text()), self.comboBox_16.currentText()
            # 实例化一个FigureCanvas
            # 画出基本部分
            self.pic.draw_main_part(title, float(self.lineEdit_39.text()),
                               start_lon, end_lon, big_interval_lon, small_interval_lon,
                               start_lat, end_lat, big_interval_lat, small_interval_lat,
                               gridline_color, gridline_width, gridline_style,
                               axis_font_size, axis_font_color,
                               ver_num=int(self.lineEdit_34.text()),hor_num=int(self.lineEdit_33.text()),
                               current_num=self.current_multi_pic)
            # 画出等高线填充部分
            if self.radioButton_4.isChecked() == True:
                # 不需要高度的参数
                if self.comboBox.currentIndex() == 0 or self.comboBox.currentIndex() == 2 or self.comboBox.currentIndex() == 5:
                    self.pic.draw_contourf(self.ncfile, self.comboBox.currentIndex(), self.comboBox_7.currentIndex(),
                                      self.comboBox_3.currentText(),float(self.lineEdit_13.text()),
                                      float(self.lineEdit_27.text()),float(self.lineEdit_32.text()))
                # 需要高度的参数
                else:
                    self.pic.draw_contourf(self.ncfile, self.comboBox.currentIndex(), self.comboBox_7.currentIndex(),
                                      self.comboBox_3.currentText(), float(self.lineEdit_13.text()),
                                      float(self.lineEdit_27.text()), float(self.lineEdit_32.text()),
                                      height=self.comboBox_2.currentIndex())
            # 画出风向部分
            if self.radioButton_14.isChecked() == True:
                if self.radioButton_16.isChecked() == True:
                    self.pic.draw_quiver(self.ncfile, int(self.lineEdit_21.text()), self.comboBox_17.currentIndex(),
                                    self.comboBox_7.currentIndex(), self.comboBox_11.currentText(),
                                    float(self.lineEdit_23.text()),
                                    float(self.lineEdit_24.text()), float(self.lineEdit_31.text()))
                if self.radioButton_17.isChecked() == True:
                    self.pic.draw_streamplot(self.ncfile, float(self.lineEdit_25.text()), self.comboBox_19.currentIndex(),
                                        self.comboBox_7.currentIndex(), float(self.lineEdit_22.text()),
                                        self.comboBox_12.currentText(),
                                        float(self.lineEdit_26.text()), self.comboBox_13.currentText())
            # 画出colorbar部分
            orientation = None
            if self.radioButton_8.isChecked() == True:
                if self.radioButton_12.isChecked() == True:
                    self.pic.draw_colorbar(0, self.comboBox.currentText())
                if self.radioButton_13.isChecked() == True:
                    if self.radioButton_10.isChecked() == True:
                        orientation = 'vertical'
                    if self.radioButton_11.isChecked() == True:
                        orientation = 'horizontal'
                    self.pic.draw_colorbar(1, self.textEdit_3.toPlainText(), hor_position=float(self.lineEdit_17.text()),
                                      ver_position=float(self.lineEdit_18.text()),
                                      hor_length=float(self.lineEdit_19.text()),
                                      ver_length=float(self.lineEdit_20.text()), orientation=orientation)
            self.textBrowser.append("第"+str(self.current_multi_pic)+"张图添加完毕")
            self.current_multi_pic+=1
        except (ValueError,RuntimeError,AttributeError):
            QtWidgets.QMessageBox.critical(None, "错误", "某些参数设置错误或未设置")

    #用于多张绘图最后的呈现
    def show_multi_pic(self):
        try:
            self.pic.adjust_subplot(float(self.lineEdit_37.text()),float(self.lineEdit_38.text()))
            graphicscene = QtWidgets.QGraphicsScene()  # 第三步，创建一个QGraphicsScene，因为加载的图形（FigureCanvas）不能直接放到graphicview控件中，必须先放到graphicScene，然后再把graphicscene放到graphicview中
            graphicscene.addWidget(self.pic)  # 第四步，把图形放到QGraphicsScene中，注意：图形是作为一个QWidget放到QGraphicsScene中的
            self.graphicsView.setScene(graphicscene)  # 第五步，把QGraphicsScene放入QGraphicsView
            self.graphicsView.show()  # 最后，调用show方法呈现图形！Voila!!
        except (ValueError,RuntimeError,AttributeError):
            QtWidgets.QMessageBox.critical(None, "错误", "某些参数设置错误或未设置")

    #用于重置
    def refresh(self):
        self.current_multi_pic=1
        self.textBrowser.clear()

    def save_fig_btn(self):
        try:
            file_path, file_type = QtWidgets.QFileDialog.getSaveFileName(None, "保存图片", "C:/", "png文件(*.png)")
            print(file_path)
            self.pic.save_fig(file_path)
        except (ValueError, RuntimeError, AttributeError):
            QtWidgets.QMessageBox.critical(None, "错误", "某些参数设置错误或未设置")


class Figure_Canvas(FigureCanvas):
    def __init__(self, width, height, dpi, parent=None):
        plt.close('all')
        self.fig = plt.figure(figsize=(width, height),
                              dpi=dpi)  # 创建一个Figure，注意：该Figure为matplotlib下的figure，不是matplotlib.pyplot下面的figure
        FigureCanvas.__init__(self, self.fig)  # 初始化父类
        self.setParent(parent)

    '''解决了异常的版本
    def draw_main_part(self, title, title_size,
                       start_x, end_x, big_interval_x, small_interval_x, x_grid, point_line,
                       start_p, end_p, big_interval_p, small_interval_p,
                       gridline_color, gridline_width, gridline_style,
                       axis_font_size, axis_font_color,lat_or_lon,ver_num=1,hor_num=1,current_num=1):
        try:
            proj = ccrs.PlateCarree()
            self.axe = plt.subplot(ver_num,hor_num,current_num, projection=proj)
            # 正常做法是调用figure下面的add_subplot方法，类似于matplotlib.pyplot下面的subplot方法。但是pyplot能够使用的功能更多
            self.axe.set_title(title,fontsize=title_size)  # 设置图题
            proj = ccrs.PlateCarree()
            self.axe.set_extent([start_x, end_x, start_p, end_p], crs=proj)  # 设置图的范围
            # 绘制网格
            gl = self.axe.gridlines(
                crs=ccrs.PlateCarree(), draw_labels=True,
                linewidth=gridline_width, color=gridline_color, linestyle=gridline_style)
            # 可以控制坐标轴出现的位置，设置False表示隐藏
            gl.top_labels = False
            gl.bottom_labels = False
            gl.right_labels = False
            gl.left_labels = False
            # 自定义给出x轴Locator的位置
            gl.xlocator = mticker.FixedLocator(np.arange(start_lon, end_lon, big_interval_lon))
            gl.ylocator = mticker.FixedLocator(np.arange(start_lat, end_lat, big_interval_lat))
            self.axe.set_xticks(np.arange(start_x, end_x + big_interval_x / 1000, big_interval_x), crs=proj)
            self.axe.set_xticks(np.arange(start_x, end_x, small_interval_x), crs=proj, minor=True)
            self.axe.set_yticks(np.arange(start_p, end_p + big_interval_p / 1000, big_interval_p), crs=proj)
            self.axe.set_yticks(np.arange(start_p, end_p, small_interval_p), crs=proj, minor=True)
            #这里添加一个self.xi,self.yi,self.xlist以供后面的需要
            self.xi, self.yi = np.mgrid[start_x:end_x:complex(str(x_grid) + 'j'), point_line:point_line:1j]
            if lat_or_lon==0:#0表示沿着纬度线进行剖切
                self.axe.xaxis.set_major_formatter(LongitudeFormatter())
            if lat_or_lon==1:#1表示沿着经度线进行剖切
                self.axe.xaxis.set_major_formatter(LatitudeFormatter())
            plt.xticks(fontsize=axis_font_size, color=axis_font_color)  # 这一行代码用于修改刻度的字体
            plt.yticks(fontsize=axis_font_size, color=axis_font_color)  # 这一行代码用于修改刻度的字体
        except (ValueError,RuntimeError,AttributeError):
            QtWidgets.QMessageBox.critical(None, "错误", "某些参数设置错误或未设置")
    '''
    #没有解决异常的测试版本
    def draw_main_part(self, title, title_size,
                       start_x, end_x, big_interval_x, small_interval_x, x_grid, point_line,
                       start_p, end_p, big_interval_p, small_interval_p,
                       gridline_color, gridline_width, gridline_style,
                       axis_font_size, axis_font_color,lat_or_lon,ver_num=1,hor_num=1,current_num=1):
        self.axe = plt.subplot(ver_num,hor_num,current_num)
        print(type(self.axe))
        # 正常做法是调用figure下面的add_subplot方法，类似于matplotlib.pyplot下面的subplot方法。但是pyplot能够使用的功能更多
        self.axe.set_title(title,fontsize=title_size)  # 设置图题
        self.axe.set_xlim(start_x,end_x)
        self.axe.set_ylim(start_p,end_p)# 设置图的范围
        # 绘制网格
        self.axe.set_xticks(np.arange(start_x, end_x + big_interval_x / 1000, big_interval_x))
        self.axe.set_xticks(np.arange(start_x, end_x, small_interval_x), minor=True)
        self.axe.set_yticks(np.arange(start_p, end_p + big_interval_p / 10000, big_interval_p))
        self.axe.set_yticks(np.arange(start_p, end_p, small_interval_p), minor=True)
        self.axe.grid(color=gridline_color, linestyle=gridline_style, linewidth=gridline_width)
        self.axe.invert_yaxis()
        #这里添加一个self.xi,self.yi,self.xlist以供后面的需要
        xi, yi = np.mgrid[start_x:end_x:complex(str(x_grid) + 'j'), point_line:point_line:1j]
        self.xi = [row[0] for row in xi]
        self.yi = [row[0] for row in yi]
        self.start_p=start_p
        self.end_p=end_p
        self.start_x=start_x
        self.end_x=end_x
        self.x_grid=x_grid
        if lat_or_lon==0:#0表示沿着纬度线进行剖切
            self.axe.xaxis.set_major_formatter(LongitudeFormatter())
        if lat_or_lon==1:#1表示沿着经度线进行剖切
            self.axe.xaxis.set_major_formatter(LatitudeFormatter())
        plt.xticks(fontsize=axis_font_size, color=axis_font_color)  # 这一行代码用于修改刻度的字体
        plt.yticks(fontsize=axis_font_size, color=axis_font_color)  # 这一行代码用于修改刻度的字体



    # 绘制填充等高线的函数
    '''解决了异常的版本
    def draw_contourf(self, ncfile, type, time, color_type, interval, contourf_min,contourf_max,lat_or_lon):
        try:
            pressure=self.griddata(ncfile,4,time,lat_or_lon)
            #由于self.xi只有一维的信息，而其他都是二维的，所以xi也要变成二维的
            x_list = []
            for i in range(len(pressure)):
                x_list.append(self.xi.tolist())
            factor=self.griddata(ncfile,type,time,lat_or_lon)
            self.contourf = self.axe.contourf(x_list, pressure, factor,
                                              levels=np.arange(contourf_min, contourf_max, interval),
                                              cmap=plt.get_cmap(color_type))
        except (ValueError,RuntimeError,AttributeError):
            QtWidgets.QMessageBox.critical(None, "错误", "某些参数设置错误或未设置")
    '''
    #没有解决异常的测试版本
    def draw_contourf(self, ncfile, type, time, color_type, interval, contourf_min, contourf_max, lat_or_lon):
        pressure = self.griddata(ncfile, 4, time, lat_or_lon)
        # 由于self.xi只有一维的信息，而其他都是二维的，所以xi也要变成二维的
        x_list = []
        for i in range(len(pressure)):
            x_list.append(self.xi)
        factor = self.griddata(ncfile, type, time, lat_or_lon)
        print('填充绘制完毕')
        self.contourf = self.axe.contourf(x_list, pressure, factor,
                                          levels=np.arange(contourf_min, contourf_max, interval),
                                          cmap=plt.get_cmap(color_type))

    # 画风向的函数_箭头
    '''解决了异常的版本
    def draw_quiver(self, ncfile, interval, time, quiver_color, quiver_width, quiver_headwidth, quiver_scale,lat_or_lon):
        try:
            hor_ws=self.griddata(ncfile,3,time,lat_or_lon)
            w=self.griddata(ncfile,2,time,lat_or_lon)
            pressure = self.griddata(ncfile, 4, time, lat_or_lon)
            hor_ws, w = hor_ws[::interval, ::interval], w[::interval, ::interval]
            #由于self.xi只有一维的信息，而其他都是二维的，所以xi也要变成二维的
            x_list = []
            for i in range(len(pressure)):
                x_list.append(self.xi.tolist())
            self.axe.quiver(x_list, pressure, hor_ws, w, pivot='mid',
                            width=quiver_width, scale=quiver_scale, color=quiver_color, headwidth=quiver_headwidth,
                            transform=ccrs.PlateCarree())
        except (ValueError,RuntimeError,AttributeError):
            QtWidgets.QMessageBox.critical(None, "错误", "某些参数设置错误或未设置")
    '''
    #没有解决异常的测试版本
    def draw_quiver(self, ncfile, interval, time, quiver_color, quiver_width, quiver_headwidth, quiver_scale,lat_or_lon):
        hor_ws = self.griddata(ncfile, 3, time, lat_or_lon)
        w = self.griddata(ncfile, 2, time, lat_or_lon)
        pressure = self.griddata(ncfile, 4, time, lat_or_lon)
        hor_ws, w = np.array(hor_ws)[::interval, ::interval], np.array(w)[::interval, ::interval]
        # 由于self.xi只有一维的信息，而其他都是二维的，所以xi也要变成二维的
        x_list = []
        for i in range(len(pressure)):
            x_list.append(self.xi)
        x_list, pressure = np.array(x_list)[::interval, ::interval], np.array(pressure)[::interval, ::interval]
        print('箭头绘制完毕')
        print(np.array(x_list).shape)
        print(np.array(pressure).shape)
        print(np.array(hor_ws).shape)
        print(np.array(w).shape)
        self.axe.quiver(x_list, pressure, hor_ws, w, pivot='mid',
                        width=quiver_width, scale=quiver_scale, color=quiver_color, headwidth=quiver_headwidth)

    # 画风向的函数_流线
    '''解决了异常的版本
    def draw_streamplot(self, ncfile, density, time, arrow_headwidth, stream_color, stream_width, arrow_type,lat_or_lon):
        try:
            hor_ws=self.griddata(ncfile,3,time,lat_or_lon)
            w=self.griddata(ncfile,2,time,lat_or_lon)
            pressure = self.griddata(ncfile, 4, time, lat_or_lon)
            hor_ws, w = hor_ws[::interval, ::interval], w[::interval, ::interval]
            #由于self.xi只有一维的信息，而其他都是二维的，所以xi也要变成二维的
            x_list = []
            for i in range(len(pressure)):
                x_list.append(self.xi.tolist())
            self.axe.streamplot(x_list, pressure, hor_ws, w, density=density,
                                color=stream_color, linewidth=stream_width, arrowsize=arrow_headwidth,
                                arrowstyle=arrow_type,
                                transform=ccrs.PlateCarree())
        except (ValueError,RuntimeError,AttributeError):
            QtWidgets.QMessageBox.critical(None, "错误", "某些参数设置错误或未设置")
    '''
    #没有解决异常的测试版本
    def draw_streamplot(self, ncfile, density, time, arrow_headwidth, stream_color, stream_width, arrow_type,lat_or_lon):
        hor_ws = self.griddata(ncfile, 3, time, lat_or_lon)
        w = self.griddata(ncfile, 2, time, lat_or_lon)
        pressure = self.griddata(ncfile, 4, time, lat_or_lon)
        hor_ws,w,pressure=np.array(hor_ws),np.array(w),np.array(pressure)
        bool,startlayer,endlayer=self.judge4streamplt(pressure)
        if bool==True:
            grid_pressure=pressure[:,0][startlayer:endlayer+1]
            grid_horws=hor_ws[startlayer:endlayer+1,:]
            grid_w=w[startlayer:endlayer+1,:]
            print("将使用原数据绘制流线")
            print(grid_pressure.shape,grid_horws.shape,grid_w.shape)
        if bool==False:
            grid_horws,grid_w,grid_pressure=self.griddata4streamplot(hor_ws,w,pressure,startlayer,endlayer)
            print("将使用网格化数据绘制流线")
            print(grid_pressure.shape)
        ####这里必须要做个说明！！！由于streamplot函数并不接受非线性的网格，他只接受方方正正的网格数据，因此这里必须要做一些简化操作，
        ####比如压力认为第一列就等效于全部。
        self.axe.streamplot(np.array(self.xi), grid_pressure, grid_horws, grid_w, density=density,
                            color=stream_color, linewidth=stream_width, arrowsize=arrow_headwidth,
                            arrowstyle=arrow_type)
        print('流线绘制完毕')

    def judge4streamplt(self,pressure):
        start_layer,end_layer=None,None
        for i in range(pressure.shape[0]):
            if pressure[:,0][i]<self.end_p:#end_p设置的是大的气压，具体原因是坐标轴的设置于相反的问题
                start_layer=i-1
                break
        for i in range(pressure.shape[0]):
            if pressure[:,0][i]<self.start_p:#start_p设置的是小i的气压，具体原因是坐标轴的设置于相反的问题
                end_layer=i
                break
        print('原压力为：')
        print(pressure[:,0])
        print(start_layer,end_layer)
        bool=np.allclose(np.diff(pressure[:,0][start_layer:end_layer+1]),
                         (pressure[:,0][start_layer:end_layer+1][-1]-pressure[:,0][start_layer:end_layer+1][0])/(end_layer-start_layer+1))
        print('展示两数之差：')
        print(np.diff(pressure[:,0][start_layer:end_layer+1]))
        print((pressure[:,0][start_layer:end_layer+1][-1]-pressure[:,0][start_layer:end_layer+1][0])/(end_layer-start_layer+1))
        return bool,start_layer,end_layer

    # 绘制图例的函数
    '''解决了异常的版本
    def draw_colorbar(self, default, colorbar_name,hor_position=None, ver_position=None, hor_length=None, ver_length=None, orientation=None):
        try:
            if default == 0:
                cb = self.fig.colorbar(self.contourf, spacing='proportional')  # orientation='horizontal'
                cb.set_label(colorbar_name)
            if default == 1:
                rect = [hor_position, ver_position, hor_length, ver_length]  # 分别代表，水平位置，垂直位置，水平宽度，垂直宽度
                cbar_ax = self.fig.add_axes(rect)
                cb = self.fig.colorbar(self.contourf, cax=cbar_ax, orientation=orientation,
                                       spacing='proportional')  # orientation='horizontal'
                cb.set_label(colorbar_name)
        except (ValueError,RuntimeError,AttributeError):
            QtWidgets.QMessageBox.critical(None, "错误", "某些参数设置错误或未设置")
    '''
    #没有解决异常的测试版本
    def draw_colorbar(self, default, colorbar_name,hor_position=None, ver_position=None, hor_length=None, ver_length=None, orientation=None):
        if default == 0:
            cb = self.fig.colorbar(self.contourf, spacing='proportional')  # orientation='horizontal'
            cb.set_label(colorbar_name)
        if default == 1:
            rect = [hor_position, ver_position, hor_length, ver_length]  # 分别代表，水平位置，垂直位置，水平宽度，垂直宽度
            cbar_ax = self.fig.add_axes(rect)
            cb = self.fig.colorbar(self.contourf, cax=cbar_ax, orientation=orientation,
                                   spacing='proportional')  # orientation='horizontal'
            cb.set_label(colorbar_name)

    #将数据插值到网格
    def griddata(self,ncfile,type,time,lat_or_lon):
        #指定参数类型
        if type == 0:
            factor = to_np(getvar(ncfile, 'tc', timeidx=time))
        if type == 1:
            factor = to_np(getvar(ncfile, 'rh', timeidx=time))
        if type == 2:
            factor = to_np(getvar(ncfile, 'wa', timeidx=time))
        if type == 3:
            if lat_or_lon==0:#0表示沿着纬度线进行剖切
                factor = to_np(getvar(ncfile, 'ua', timeidx=time))
                print("这是ua")
            if lat_or_lon==1:#1表示沿着经度线进行剖切
                factor = to_np(getvar(ncfile, 'va', timeidx=time))
                print('这是va')
        if type == 4:
            factor = to_np(getvar(ncfile, 'pressure',timeidx=time))
        lon = to_np(getvar(ncfile, 'lon'))
        lat = to_np(getvar(ncfile, 'lat'))
        x_list, y_list, factor_list_x, factor_list = [], [], [], []
        if lat_or_lon==0:#0表示沿着纬度线进行剖切
            for i in lon:
                for j in i:
                    x_list.append(j)
            for i in lat:
                for j in i:
                    y_list.append(j)
        if lat_or_lon==1:#1表示沿着经度线进行剖切
            for i in lat:
                for j in i:
                    x_list.append(j)
            for i in lon:
                for j in i:
                    y_list.append(j)
        x_y = list(zip(x_list, y_list))
        for i in range(factor.shape[0]):
            for j in factor[i]:
                for k in j:
                    factor_list_x.append(k)
            factor_new = griddata(x_y, factor_list_x, (self.xi, self.yi), method='cubic')  # 进行插值
            factor_list.append(factor_new)
            factor_list_x=[]
        return factor_list

    #这个griddata是专用于streamplot的
    def griddata4streamplot(self,hor_ws,w,pressure,startlayer,endlayer):
        x_list=[]
        for i in range(pressure.shape[0]):
            for j in self.xi:
                x_list.append(j)
        pressure_list=[]
        for i in pressure:
            for j in i:
                pressure_list.append(j)
        #print(len(x_list))
        #print(len(pressure_list))
        x_y=list(zip(x_list,pressure_list))
        hor_ws_list,w_list=[],[]
        for i in hor_ws:
            for j in i:
                hor_ws_list.append(j)
        for i in w:
            for j in i:
                w_list.append(j)
        xi,yi=np.mgrid[self.start_x:self.end_x:complex(str(self.x_grid) + 'j'),
              pressure[:,0][startlayer]:pressure[:,0][endlayer]:complex(str(endlayer-startlayer+1)+'j')]
        grid_horws=griddata(x_y,hor_ws_list,(xi, yi), method='cubic')
        print('网格化的horws形状为：'+str(grid_horws.T.shape))
        grid_w = griddata(x_y, w_list, (xi, yi), method='cubic')
        print('网格化的w形状为：'+str(grid_w.T.shape))
        grid_pressure=np.mgrid[pressure[:,0][startlayer]:pressure[:,0][endlayer]:complex(str(endlayer-startlayer+1)+'j')]
        print('网格化的pressure：')
        print(grid_pressure)
        return grid_horws.T,grid_w.T,grid_pressure


    #修改子图间距
    def adjust_subplot(self,wspace,hspace):
        try:
            plt.subplots_adjust(wspace=wspace,hspace=hspace)
        except (ValueError,RuntimeError,AttributeError):
            QtWidgets.QMessageBox.critical(None, "错误", "某些参数设置错误或未设置")

    # 保存图片
    def save_fig(self, path):
        try:
            self.fig.savefig(path)
        except (ValueError,RuntimeError,AttributeError):
            QtWidgets.QMessageBox.critical(None, "错误", "某些参数设置错误或未设置")


if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())